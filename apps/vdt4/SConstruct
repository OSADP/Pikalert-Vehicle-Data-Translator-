
import os

env = Environment(CPPPATH=[os.environ["NETCDF_INC_DIR"], os.environ["HDF_INC_DIR"], os.environ["LOCAL_INC_DIR"]], CCFLAGS=os.environ["RAL_CCFLAGS"], LIBPATH=[os.environ["NETCDF_LIB_DIR"], os.environ["HDF_LIB_DIR"], os.environ["ZLIB_LIB_DIR"], os.environ["SZIP_LIB_DIR"], os.environ["LOCAL_LIB_DIR"]])

env["INSTALLPATH"] = os.environ["LOCAL_BIN_DIR"]

env.Append(LINKFLAGS = Split('-z origin'))
env.Append( RPATH = env.Literal(os.path.join('\\$$ORIGIN', os.pardir, 'lib')))

vdt_inc_dir = "%s/vdt4" % os.environ["LOCAL_INC_DIR"]

vdt45 = env.Program(
    "vdt45", [
    "arguments.cc",
    "config_reader.cc",
    "main.cc",
    "process.cc",
    "qc_check.cc",    
    "vdt_probe_data_qc.cc",
    "vdt_probe_message_datasets_test.cc",
    "vdt_probe_message_datasets.cc",
    "vdt_test_generator.cc"
                                   ],LIBS=[
                                           "libconfig++",
                                           "log",
                                           "rwx",
                                           "vdt4",
                                           #This may be ANN or ann depending on the version
                                           os.environ["LIB_ANN_NAME"],
                                           "netcdf_c++4",
                                           "netcdf_c++",
                                           "netcdf",
                                           "hdf5_hl",
                                           "hdf5",
                                           "z",
                                           "Proj4Wrap",
                                           "proj",
                                           "dmapf",
                                           "pthread",
                                           "m"])

env.Install(os.environ["LOCAL_BIN_DIR"], "vdt45")
env.Alias("install", [os.environ["LOCAL_BIN_DIR"]])
