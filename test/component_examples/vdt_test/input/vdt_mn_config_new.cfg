#----------------------------
# VDT Configuration File
#---------------------------
#
VDT:
{
    // Please, do NOT edit the 'version' setting. 
    // Changing the version number, might cause undesirable outcomes.
    //
    // 1.0: vdt_manager (first release)
    //
    // 1.1: - configurable qc,
    //      - extended output probe_data_qc, assessment,
    //      - more functional and logical logging
    //
    // 1.2: - 'dte10' flag in config file allows of processing additional fields in
    //      - input probe data, i.e., air_temp2, dew_temp, surface_temp
    //      - 'vdt_grid' flag in config file makes vdt_grid output optional
    //      - versioning, version number in config file has to match the version of the
    //        vdt_manager exectubale               
    version = 1.2;
    
    rtma_proj4_projection_string = "+proj=lcc +R=6371200 +lon_0=-95.0 +lat_0=25.0 +lat_1=25.0 +lat_2=25.0";
    rtma_dx = 2539.703;
    rtma_dy = 2539.703;
    rtma_la1 = 20.192;
    rtma_lo1 = -121.554;

    // The lat/long box of the area of interest
    lat_long_box:
    {
        s_lat = 43.197167; //rough box around Minnesota
        w_long = -97.426758;
        n_lat = 49.837982;
        e_long = -88.022461;

	grid_lat_size = 500;
	grid_lon_size = 500;
	grid_cell_length = 1000.0; 
    };

   // Alaska rtma stereographic projection parameters
   ak_rtma_latin = 90.0;
   ak_rtma_nx = 1649;
   ak_rtma_ny = 1105;
   ak_rtma_la1 = 40.5301;
   ak_rtma_lo1 = -178.581;
   ak_rtma_la2 = 63.97587;
   ak_rtma_lo2 = -93.68965;
   ak_rtma_lad = 60.0;
   ak_rtma_lov = 210.0;
   ak_rtma_dx = 2.976563;
   ak_rtma_dy = 2.976563;
						    

    // More input configuration settings: 
    //  road segment input file, 
    //  location of the METARS files (netcdf) 
    //  cdl files 
    input_config:
    {
        // clarus climatology file
	climatology_file = "/d2/vii/data/static/cdl/clarus_climatology.nc";
        
        // The .cdl files for VDT's output products
        probe_message_qc_cdl = "/d2/vii/data/static/cdl/probe_message_qc_new.cdl";
        statistics_cdl = "/d2/vii/data/static/cdl/probe_message_qc_statistics_new.cdl";
        assessment_cdl = "/d2/vii/data/static/cdl/road_segment_assessment.cdl";
    };

    qc_config:
    {
	max_dist_to_segment = 1.5;           // km
        max_dist_to_cell = 1.5;              // km
	max_nearest_neighbor = 5;

        //max_dist_to_segment = 0.2;           // degrees
        //max_dist_to_cell = 0.2;              // degrees

        // Probe message time window is specified with a user specified [begin_time, end_time)
	// It is then adjusted to be [begin_time - max_begin_time_delta, end_time + max_end_time_delta)
	max_begin_time_delta = 3600;         // units seconds
	max_end_time_delta = 120;            // units seconds
           
        // Neighboring Surface Station Test (NST)
	// All of the variables in the block below are part of the Neighboring Surface Station Test

	// probe_message_to_qc.obs_time - nst_time_range <= surface_station.obs_time <= probe_message_to_qc.obs_time + nst_time_range
	// |air_temp_car - air_temp_station| < nst_air_temp_delta in Celsius
	// |bar_press_car - bar_press_station| < nst_bar_press_delta in hPa

        surface_station_test = 1;            
	nst_search_radius = 50.0;    // radius unit: km        
        nst_time_range = 3600;      // time unit: seconds 
            
	// Combined Algorithm Test (CAT) threshold
	// Threshold for deciding outcome of the combined_algorithm_test.
	// Threshold should be between 0 and 1 where 0 means test almost always passes and 1 is more stringent
	combined_algorithm_threshold = 0.75;

	// Combined Algorithm Test (CAT) weights 
	// Weights for STEP, SPATIAL, PERSIST, CRT tests in the combined algorithm linear combination
	combined_algorithm_weights = [0.1, 0.2, 0.15, 0.15];

        // Neighboring Vehicle Test (NVT)
	// All of the variables in the block below are part of the Neighboring Vehicle Test
        neighboring_vehicle_test = 1;

        // Spatial Tests - Air Pressre (STP) and Air and Pavement Temperature (STTa and STTp)
        // All of the variables in the block below are part of the Spatial Tests
        spatial_tests = 1;

        spatial_range_search_km = 50; // units: kilometers
        spatial_time_search_secs = 3600; // units: seconds
	spatial_iqr_air_temp_tol = 3.5; // units: degrees Celsius
	spatial_iqr_dew_temp_tol = 3.5; // units: degrees Celsius
	spatial_iqr_surface_temp_tol = 5;  // units: degrees Celsius  Ask Sheldon if this should be different
	spatial_iqr_pressure_tol = 7.5; // units: mb
	spatial_iqr_multiplier = 3.0;	
	spatial_barnes_min_size = 2;
	spatial_barnes_max_sd = 2;

        // History Tests (includes PET and TST)
        history_tests = 1;
        history_path = "/d2/vii/data/mn_history/";
        history_basename = "history_probe_msg_qc";
        history_cutoff_time = 3600; // units: seconds (1 hour)
    };

    //NOTE: ALL PROBE MESSAGE FIELD NAMES SHOULD BE IN THIS PARAM GROUP EVEN IF THEY DO NOT HAVE ASSOCIATED TESTS
    probe_message_field_params = {
            abs = {
                type = "short",
		//Should both be of the same type as the variable
		sensor_range_test = {
		    min = 0,          // bit values
	            max = 3           // bit values
		 };
	    },
           air_temp = {
                type = "short",
                sensor_range_test = {
		    min = -40,        // temperature unit: Celsius
      		    max = 67,         // temperature unit: Celsius
		    exclude0 = -17
		},
		std_dev_test = {
		    mult = 2.5
		},
		model_analysis_test = {
		    delta = 10.0
		},
		persistence_test = {
		    time = 60;
		},
		time_step_test = {
		    magnitude = 0.1,
		    time = 30
		},
		met_field = {
		    name = "air_temp" 
		}
	    },
	    air_temp2 = {
               type = "float",	
	       sensor_range_test = {
                  min = -40.0,        // temperature unit: Celsius
                  max = 67.0,         // temperature unit: Celsius
		  exclude0 = -17.77778,
               },
               std_dev_test = {
                    mult = 2.5
               },
	       model_analysis_test = {
		    delta = 10.0
	       },
	       persistence_test = {
		    time = 60;
	       },
	       time_step_test = {
		    magnitude = 0.1,
		    time = 30
	       },
               met_field = {
		    name = "air_temp" 
	       }
	    },
	    bar_pressure = {
                type = "short",
		sensor_range_test = {
		    min = 580,        // pressure unit: mb
                    max = 1090        // pressure unit: mb
		},
	        std_dev_test = {
	       	  mult = 2.5
	        },
		model_analysis_test = {
		  delta = 10.0
	        },
		persistence_test = {
		    time = 60;
		},
	        time_step_test = {
		    magnitude = 25.0,
		    time = 30
	        },
		met_field = {
		    name = "bar_pressure" 
		}
	    },
    	    brake_boost = {
	        type = "short",
		sensor_range_test = {
    		    min = 0,          // bit values  
	            max = 2           // bit values
		};
	    },
      	    brake_status = {
	        type = "short",
		sensor_range_test = {
		    min = 0,          // bit values
		    max = 15          // bit values
		};
	    },
	    dew_temp = {
               type = "float",
	       sensor_range_test = {
                  min = -40.0,        // temperature unit: Celsius
                  max = 67.0,         // temperature unit: Celsius
		  exclude0 = -17.77778,
               },
	       std_dev_test = {
	        mult = 2.5
	       },
	       model_analysis_test = {
		    delta = 20.0
	       },
	       persistence_test = {
		    time = 60;
	       },
	       time_step_test = {
		    magnitude = 0.1,
		    time = 30
	       },
	       met_field = {
		    name = "dew_temp" 
		}
	    },
            elevation = {
                type = "float"
	    },
	    heading = {
                type = "float",
		sensor_range_test = {
		    min = 0.0,   // unit: degrees
	            max = 360.0;         // unit: degrees
		};
	    },
	    hoz_accel_lat = {
               type = "float",
	       sensor_range_test = {
	       	  min = -19.66976,       // speed unit: m/s
                  max = 19.66976         // speed unit: m/s 
	       };
	    },
	    hoz_accel_long = {
               type = "float",
	       sensor_range_test = {
	       	   min = -19.66976,     // speed unit: m/s
                   max = 19.66976       // speed unit: m/s
	       }; 
	    },
	    humidity = {
	       type = "float"
	    },
      	    latitude = {
                type = "double"
		//Should be of the same type as the variable
		data_filter_test = {
		    min = -90.0,
		    max = 90.0
		};
	    },
	    lights = {
	    	type = "short",
		sensor_range_test = {
		    min = 0,          // bit values
                    max = 255         // bit values
		};
	    },
      	    longitude = {
                type = "double",
		data_filter_test = {
		    min = -180.0,
		    max = 180.0
		};
	    },
	    obs_time = {
	        type = "double",
	    },
	    psn = {
	        type = "int"
	    },
            rec_time = {
	    	type = "double"
	    },
	    source_id = {
	        type = "string"
	    },
	    speed = {
                type = "float",
		sensor_range_test = {
	          min = -328.12736,   // speed unit: m/s
        	  max = 328.12736     // speed unit: m/s
	        };
	    },
	    stab = {
                type = "short",
		sensor_range_test = {
		   min = 0,           // bit values
                   max = 3            // bit values
		};
	    },
	    steering_angle = {
               type = "float",
	       sensor_range_test = {
	       	   min = -655.36,        // unit: degrees
                   max = 655.36          // unit: degrees
	       };
	    },
	    steering_rate = {
               type = "short",
               sensor_range_test = {
	           min = -381,           // unit: degrees
	           max = 381             // unit: degrees
	       };
	    },
	    surface_temp = {
               type = "float"
	       sensor_range_test = {
                  min = -40.0,        // temperature unit: Celsius
                  max = 67.0,         // temperature unit: Celsius
		  exclude0 = -17.77778
               },
	       std_dev_test = {
	       	  mult = 2.5
	       },
	       persistence_test = {
	       	  time = 60;
	       },
	       time_step_test = {
		    magnitude = 0.1,
		    time = 30
	       },
               met_field = {
		    name = "surface_temp" 
		}
	    },
	    tire_pressure_lf = {
               type = "short"
	    },
	    tire_pressure_lr = {
               type = "short"
	    },
      	    tire_pressure_rf = {
	       type = "short"
	    },
      	    tire_pressure_rr = {
	       type = "short"
	    },
	    tire_pressure_sp = {
               type = "short"
	    },
	    trac = {
                type = "short",
		sensor_range_test = {
		  min = 0,            // bit values
                  max = 3             // bit values
		};
	    },
      	    vehicle_id = {
	        type = "string"
	    },
	    wiper_status = {
                type = "short",
		sensor_range_test = {
		   min = 0,           // bit values [0,5] and 255
   	           max = 255; 
		}
	    },
	    yaw_rate = {
                type = "float",
		sensor_range_test = {
		     min = 0.0,           // unit: degrees
	             max = 655.35       // unit: degrees
		};
	    }
	  };
};
### eof
