#----------------------------
# VDT Configuration File
#---------------------------
#
VDT:
{
    // Please, do NOT edit the 'version' setting. 
    // Changing the version number, might cause undesirable outcomes.
    //
    // 1.0: vdt_manager (first release)
    //
    // 1.1: - configurable qc,
    //      - extended output probe_data_qc, assessment,
    //      - more functional and logical logging
    //
    // 1.2: - 'dte10' flag in config file allows of processing additional fields in
    //      - input probe data, i.e., air_temp2, dew_temp, surface_temp
    //      - 'vdt_grid' flag in config file makes vdt_grid output optional
    //      - versioning, version number in config file has to match the version of the
    //        vdt_manager exectubale               
    version = 1.2;

    rtma_proj4_projection_string = "+proj=lcc +R=6371200 +lon_0=-95.0 +lat_0=25.0 +lat_1=25.0 +lat_2=25.0";
    rtma_dx = 2539.703;
    rtma_dy = 2539.703;
    rtma_la1 = 20.192;
    rtma_lo1 = -121.554;
    
    // The lat/long box of the area of interest
    lat_long_box:
    {
        s_lat = 34.560859; //rough box around Nevada
        w_long = -120.765381;
        n_lat = 42.730874;
        e_long = -113.162842;
        grid_cell_length = 1000.0; 
    };

    // More input configuration settings: 
    //  road segment input file, 
    //  location of the METARS files (netcdf) 
    //  cdl files 
    input_config:
    {
        // clarus climatology file
	climatology_file = "/d2/vii/data/static/cdl/clarus_climatology.nc";

        // max. distance between a probe message's lat/long and matched road segment's lat/long midpoint in meters
        // if set to 0, then this test is not performed
        max_dist_road_segment_probe_message = 0.0;
        
        // The .cdl files for VDT's output products
        probe_message_cdl = "/d2/vii/data/static/cdl/probe_message.cdl";
        probe_message_qc_cdl = "/d2/vii/data/static/cdl/probe_message_qc.cdl";
        statistics_cdl = "/d2/vii/data/static/cdl/probe_message_qc_statistics.cdl";
        assessment_cdl = "/d2/vii/data/static/cdl/road_segment_assessment.cdl";
    };
        
   field_names:                                                                                                                                                                                                                     
    {                                                                                                                                                                                                                                     probe_message_field_names = [
      "obs_time",
      "rec_time",
      "latitude",
      "longitude",
      "elevation",
      "vehicle_id",
      "source_id",
      "speed",
      "brake_status",
      "brake_boost",
      "wiper_status",
      "air_temp",
      "bar_pressure",
      "trac",
      "stab",
      "abs",
      "lights",
      "psn",
      "heading",
      "yaw_rate",
      "hoz_accel_long",
      "hoz_accel_lat",
      "tire_pressure_lf",
      "tire_pressure_rf",
      "tire_pressure_lr",
      "tire_pressure_rr",
      "tire_pressure_sp",
      "steering_angle",
      "steering_rate",
      "air_temp2",
      "dew_temp",
      "humidity",
      "surface_temp"];
    };

    qc_config:
    {
        max_dist_to_segment = 0.2;           // degrees
        max_dist_to_cell = 0.2;              // degrees

        // Probe message time window is specified with a user specified [begin_time, end_time)
	// It is then adjusted to be [begin_time - max_begin_time_delta, end_time + max_end_time_delta)
	max_begin_time_delta = 3600;         // units seconds
	max_end_time_delta = 120;            // units seconds

        // Sensor Range Test (SRT)
	// All of the variables in the block below are part of the Sensor Range Test
        sensor_range_test = 1;
        speed_range_min = -328.12736;         // speed unit: m/s
        speed_range_max = 328.12736;          // speed unit: m/s
        air_temp_min = -40.0;                 // temperature unit: Celsius
        air_temp_max = 67.0;                 // temperature unit: Celsius
        bar_press_min = 580.0;                // pressure unit: mb
        bar_press_max = 1090.0;               // pressure unit: mb
	brake_status_min = 0;                 // bit values
	brake_status_max = 15;                // bit values
	brake_boost_min = 0;                  // bit values  
	brake_boost_max = 2;                  // bit values
	wiper_status_min = 0;                 // bit values [0,5] and 255
	wiper_status_max = 255;               // bit values [0,5] and 255
	traction_control_min = 0;             // bit values
	traction_control_max = 3;             // bit values
	stability_control_min = 0;            // bit values
	stability_control_max = 3;            // bit values
        abs_min = 0;                          // bit values
	abs_max = 3;                          // bit values
	headlights_min = 0;                   // bit values
        headlights_max = 255;                 // bit values
        yaw_rate_min = 0;                     // unit: degrees
	yaw_rate_max = 655.35;                // unit: degrees
        hoz_accel_lat_min = -19.66976;        // speed unit: m/s
        hoz_accel_lat_max = 19.66976;         // speed unit: m/s
        hoz_accel_lon_min = -19.66976;        // speed unit: m/s
        hoz_accel_lon_max = 19.66976;         // speed unit: m/s
        steering_wheel_angle_min = -655.36;   // unit: degrees
        steering_wheel_angle_max = 655.36;    // unit: degrees
	steering_rate_min = -381;             // unit: degrees
	steering_rate_max = 381;              // unit: degrees
	heading_min = 0;                      // unit: degrees
	heading_max = 360;                    // unit: degrees
	
        // Standard Deviation Test (SDT)
	// All of the variables in the block below are part of the Standard Deviation Test
	 
	// (air_temp_mean - (2.5 * air_temp_st_dev)) <= air_temp && air_temp <= (air_temp_mean + (2.5 * air_temp_st_dev))
	// (bar_press_mean - (2.5 * bar_press_st_dev)) <= bar_press && bar_press <= (bar_press_mean + (2.5 * bar_press_st_dev)) 

        standard_deviation_test = 1;        
        air_temp_dev_mult = 2.5;        
        dew_temp_dev_mult = 2.5;        
        surface_temp_dev_mult = 2.5;        
        bar_press_dev_mult = 2.5; 
           
        // Neighboring Surface Station Test (NST)
	// All of the variables in the block below are part of the Neighboring Surface Station Test

	// probe_message_to_qc.obs_time - nst_time_range <= surface_station.obs_time <= probe_message_to_qc.obs_time + nst_time_range
	// |air_temp_car - air_temp_station| < nst_air_temp_delta in Celsius
	// |bar_press_car - bar_press_station| < nst_bar_press_delta in hPa

        surface_station_test = 1;            
	nst_search_radius = 50.0;    // radius unit: km        
        nst_time_range = 3600;      // time unit: seconds 
	nst_qc_air_temp = 1;        
        nst_air_temp_delta = 2.0;  // vdt_qc_config.cc has 5 listed ???        
        nst_qc_bar_press = 0;        
	nst_bar_press_delta = 10.0;

        // Model Analysis Test (MAT)
	// All of the variables in the block below are part of the Model Analysis Test 

	// |air_temp_car - air_temp_mat| < mat_air_temp_delta in Celsius
	// |bar_press_car - bar_press_mat| < mat_bar_press_delta in hPa

        model_analysis_test = 1;       
        mat_air_temp_delta = 20.0;
        mat_dewpoint_delta = 20.0;
	mat_bar_press_delta = 10.0;
            
        // Climatological Range Test (CRT)
	// All of the variables in the block below are part of the Climatological Range Test 
        climatological_range_test = 1;

        // Combined Algorithm Test (CAT)
	// All of the variables in the block below are part of the Combined Algorithm Test 
        combined_algorithm_test = 1;

	// Combined Algorithm Test (CAT) threshold
	// Threshold for deciding outcome of the combined_algorithm_test.
	// Threshold should be between 0 and 1 where 0 means test almost always passes and 1 is more stringent
	combined_algorithm_threshold = 0.75;

	// Combined Algorithm Test (CAT) weights 
	// Weights for STEP, SPATIAL, PERSIST, CRT tests in the combined algorithm linear combination
	combined_algorithm_weights = [0.1, 0.2, 0.15, 0.15];

        // Neighboring Vehicle Test (NVT)
	// All of the variables in the block below are part of the Neighboring Vehicle Test
        neighboring_vehicle_test = 1;

        // Remote Observation Test (ROT)
	// All of the variables in the block below are part of the Remote Observation Test
        remote_observation_test = 0;

	// Data Filtering Test (DFT)
	// All of the variables in the block below are part of the Data Filtering Test 
	data_filtering_test = 1;

	latitude_min = -90.0;
	latitude_max = 90.0;
	longitude_min = -180.0;
	longitude_max = 180.0;

        // Spatial Tests - Air Pressre (STP) and Air and Pavement Temperature (STTa and STTp)
        // All of the variables in the block below are part of the Spatial Tests
        spatial_tests = 1;

        spatial_range_search_km = 50; // units: kilometers
        spatial_range_height_m = 0; // units: meters
        spatial_time_search_secs = 3600; // units: seconds
	spatial_iqr_air_temp_tol = 3.5; // units: degrees Celsius
	spatial_iqr_dew_temp_tol = 3.5; // units: degrees Celsius
	spatial_iqr_surface_temp_tol = 5;  // units: degrees Celsius  Ask Sheldon if this should be different
	spatial_iqr_pressure_tol = 7.5; // units: mb
	spatial_iqr_multiplier = 3.0;	
	spatial_barnes_min_size = 2;
	spatial_barnes_max_sd = 2;

        // History Tests (includes PET and TST)
        history_tests = 1;
        history_path = "/d2/vii/data/nv_history/";
        history_basename = "history_probe_msg_qc";
        history_cutoff_time = 3600; // units: seconds (1 hour)

        // Persistence Test (PET)
        // All of the variables in the block below are part of the Persistence Test 
        persistence_test = 1;
	persistence_min_size = 4;   // minimum number of probe messages needed in the history time period determined by persist_time in order to perform persistence test

        air_temp_persist_time = 60; // units: minutes (1 hour)
        air_temp2_persist_time = 60; // units: minutes (1 hour)
        dew_temp_persist_time = 60; // units: minutes (1 hour)
        surface_temp_persist_time = 60; // units: minutes (1 hour)
        bar_press_persist_time = 60; // units: minutes (1 hour)

        // Time Step Test (TST)
        // All of the variables in the block below are part of the Time Step Test 
        time_step_test = 1;

	air_temp_step_magnitude = 0.1; // units: degrees
	air_temp_step_time = 30; // units: minutes (30 minutes)

	air_temp2_step_magnitude = 0.1; // units: degrees
	air_temp2_step_time = 30; // units: minutes (30 minutes)

	dew_temp_step_magnitude = 0.1; // units: degrees
	dew_temp_step_time = 30; // units: minutes (30 minutes)

	surface_temp_step_magnitude = 0.1; // units: degrees
	surface_temp_step_time = 30; // units: minutes (30 minutes)

	bar_press_step_magnitude = 25; // units: mb
	bar_press_step_time = 30; // units: minutes (30 minutes)

    };
};
### eof
